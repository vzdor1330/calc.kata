package calc1;




import java.util.InputMismatchException;

import java.util.Scanner;







public class Main {

    static Scanner scanner = new Scanner(System.in);

    static int number1, number2;

    static char operation;

    static int result;




    public static void main (String[] args) {

        System.out.println("Введите выражение");

//      сканер считает с консоли введеное выражение

        String userInput = scanner.nextLine();

//      символьный массив пуст, он для ввода

        char[] char1 = new char[10];

//      он заполнится из консоли там же получим и знак

        for (int i = 0; i < userInput.length(); i++) {

            char1[i] = userInput.charAt(i);

            if (char1[i] == '+') {

                operation = '+';

            }

            if (char1[i] == '-') {

                operation = '-';

            }

            if (char1[i] == '*') {

                operation = '*';

            }

            if (char1[i] == '/') {

                operation = '/';

            }

        }

        String char1String = String.valueOf(char1);

        String[] blacks = char1String.split("[+-/*]");

        String stable00 = blacks[0];

        String stable01 = blacks[1];

        String string03 = stable01.trim();

        number1 = romanToNumber(stable00);

        number2 = romanToNumber(string03);

        if (number1 < 0 && number2 < 0) {

            result = 0;

        } else {

            result = calculated(number1, number2, operation);

            System.out.println("римские");

            String resultRoman = convertNumToRoman(result);

            System.out.println(stable00 + " " + operation + " " + string03 + " = " + resultRoman);

        }

        number1 = Integer.parseInt(stable00);

        number2 = Integer.parseInt(string03);

        result = calculated(number1, number2, operation);

        System.out.println("арабские");

        System.out.println(number1 + " " + operation + " " + number2 + " = " + result);

    }

// далее опишем римские цифры, которые будут использоваться


    private static String convertNumToRoman (int numArabian) {

        String[] roman = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX",

                "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL",

                "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII", "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX",

                "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX",

                "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX",

                "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC",

                "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII", "XCVIII", "XCIX", "C"

        };

        final String s = roman[numArabian];

        return s;

    }




// здесь римские цифры преобразованы в арабские для вычисления


    private static int romanToNumber (String roman) {

        try {

            if (roman.equals("I")) {

                return 1;

            } else if (roman.equals("II")) {

                return 2;

            } else if (roman.equals("III")) {

                return 3;

            } else if (roman.equals("IV")) {

                return 4;

            } else if (roman.equals("V")) {

                return 5;

            } else if (roman.equals("VI")) {

                return 6;

            } else if (roman.equals("VII")) {

                return 7;

            } else if (roman.equals("VIII")) {

                return 8;

            } else if (roman.equals("IX")) {

                return 9;
            } else if (roman.equals("X")) {

                return 10;

            }

        } catch (InputMismatchException e) {

            throw new InputMismatchException("неверный тип данных");

        }

        return -1;

    }




    public static int calculated (int num1, int num2, char op) {

        int result = 0;

        switch (op) {

            case '+':

                result = num1 + num2;

                break;

            case '-':

                result = num1 - num2;

                break;

            case '*':

                result = num1 * num2;

                break;

            case '/':

                try {

                    result = num1 / num2;

                } catch (ArithmeticException | InputMismatchException e) {

                    System.out.println("исключение : " + e);

                    System.out.println("только целые и не равные нулю");




                    break;

                }

                break;

            default:

                throw new IllegalArgumentException("неверный знак операции");

        }

        return result;

    }

}
